<h1>Edit</h1>

<p>
  ホストからホストへ繋ぎたい経路を順に選択してください <br>
  新規の経路であればVLANを新規作成し, 既存の経路であればVLANを上書きします
</p>

<div id=btn><input type="button" value="決定" onclick="OnButtonClick();"/><br /></div>
<div id="mynetwork"></div>
<!-- <pre><id="eventSpan"></pre> -->

<%= render :partial => "divide" %>

<%= render :partial => "distinct" %>

<script>
let nodes = [];
for(i=0; i < distinctSwitches.length; i++) {
  nodes.push({
    id: distinctSwitches[i],
    label: `Swicth \n0x${distinctSwitches[i]}`,
    shape: 'box'
  });
}

// ホストを表示する
for(i=0; i < hosts.length; i++) {
  nodes.push({
    id: hosts[i],
    label: `Host \n${hosts[i]}`,
    shape: 'circle'
  });
}

// スイッチ間のつながりを表示する
let edges = [];

for(i=0; i < gon.topologies.length; i++) {
  if (topology[i].dport2 != null) {
    if (topology[i].dport2.match(/-/)) {
      edges.push({
        id: topology[i].dport1 + "," + topology[i].dport2,
        from: topology[i].dport1.split("-")[0],
        to: topology[i].dport2.split("-")[0],
        label: `${topology[i].dport1} ${topology[i].dport2} \n ${Math.round((((topology[i].delay)*1000)*100))/100}ms`,
        width: 3,
      });
    }else {
      edges.push({
        id: topology[i].dport1,
        from: topology[i].dport1.split("-")[0],
        to: topology[i].dport2,
        label: `${topology[i].dport1}`,
        width: 3,
      });
    }
  }
}


// create a network
let container = document.getElementById('mynetwork');

// provide the data in the vis format
let data = {
  nodes: nodes,
  edges: edges
};
let options = {
  layout: {
    randomSeed: 1
  }
};

// initialize your network!
var network = new vis.Network(container, data, options);
let path = "";
let tmp = "";
let comparison = [];
let a = [];
let start_end = [];

// 画面内がクリックされた時
network.on("click", function (params) {
  if (params.edges[0].match(/,/)) {
    comparison = params.edges[0].split(",");
    if (tmp != comparison[0][0]) {
      let temp = comparison[0];
      comparison[0] = comparison[1];
      comparison[1] = temp;
    }
    // console.log(comparison)
    tmp = comparison[1][0];
    path += comparison + "|";
  }else {
    tmp = params.edges[0][0]
    start_end.push(params.edges[0])
    //console.log(start_end)
    path += params.edges[0] + "|";
  }
});


// ボタンクリック時
function OnButtonClick() {
  // target = document.getElementById("output");
  // target2 = document.getElementById("output2");
  // target.innerHTML = path.slice(0, -1)
  // target2.innerHTML = start_end
  let judge = 0;
  for(let i=0; i < gon.vlans.length; i++) {
    if(gon.vlans[i].start==start_end[0] || gon.vlans[i].end==start_end[0]) {
      if (start_end.length != 2) {
        console.log(start_end)
        alert("アクセスポートが1つ以下しか選ばれていないか, 3つ以上選ばれています. \n 1本の経路となるように選び直してください")
        path = "";
        start_end = [];
        judge++;
        break;
      }
      modifyCheck = confirm("VLAN番号: " + gon.vlans[i].vlanid + "を変更します よろしいですか?\n" + "変更前: " + gon.vlans[i].path + "\n変更後: " + path.slice(0, -1))
      if (modifyCheck == true) {
        alert("変更します")
        $.ajax({
          url: 'http://0.0.0.0:3000/topology/update',
          type: 'GET',
          data: {
            path: path.slice(0, -1),
            start: start_end[0],
            end: start_end[1]
          }
        })
        .done(function(response){
          console.log("success")
          $.ajax({
            url: `http://10.50.0.100:8080/modify/${start_end[0]}/${start_end[1]}`,
            type: 'GET'
          })
          .done(function(response){
            console.log("success")
          })
          .fail(function(xhr){
            console.log("feild")
          });
        })
        .fail(function(xhr){
          console.log("feild")
        });
      }else {
        alert("キャンセルしました\n 経路を選んでください");
        path = "";
        start_end = [];
      }
      judge++;
      break;
    }

  }
  if(judge==0) {
    let vlan_num=prompt("追加したいVLAN番号を入力してください");
    if(vlan_num==null){
      /* [キャンセル]ボタンが押下された場合 */
      alert("作成しませんでした");
    }else{
      /* 入力値を表示 */
      $.ajax({
        url: 'http://0.0.0.0:3000/topology/addvlan',
        type: 'GET',
        data: {
          newVlan: vlan_num,
          start: start_end[0],
          end: start_end[1],
          path: path.slice(0, -1)
        }
      })
      .done(function(response){
        console.log("success")
        $.ajax({
          url: `http://10.50.0.100:8080/add/${start_end[0]}/${start_end[1]}`,
          type: 'GET'
        })
        .done(function(response){
          console.log("success")
        })
        .fail(function(xhr){
          console.log("feild")
        });
      })
      .fail(function(xhr){
        console.log("feild")
      });
    }
    judge--;
  }else {
    judge--;
  }

}
</script>
<!-- <br />
<div id="output"></div>
<div id="output2"></div> -->
