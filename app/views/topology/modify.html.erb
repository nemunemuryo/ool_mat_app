<div id="mynetwork"></div>
<pre><id="eventSpan"></pre>

<%= render :partial => "divide" %>

<%= render :partial => "distinct" %>

<script>
var changeChosenEdgeDashes =
 (values, id, selected, hovering) => {
  values.dashes = [ 10, 10 ];
}

let nodes = [];
for(i=0; i < distinctSwitches.length; i++) {
  nodes.push({
    id: distinctSwitches[i],
    label: `Swicth \n0x${distinctSwitches[i]}`,
    shape: 'box'
  });
}

// ホストを表示する
for(i=0; i < hosts.length; i++) {
  nodes.push({
    id: hosts[i],
    label: `Host \n${hosts[i]}`,
    shape: 'circle'
  });
}

// スイッチ間のつながりを表示する
let edges = [];

for(i=0; i < gon.topologies.length; i++) {
  if (topology[i].dp_port2 != null) {
    if (topology[i].dp_port2.match(/-/)) {
      edges.push({
        id: topology[i].dp_port1 + "," + topology[i].dp_port2,
        from: topology[i].dp_port1.split("-")[0],
        to: topology[i].dp_port2.split("-")[0],
        label: `${topology[i].dp_port1} ${topology[i].dp_port2} \n ${topology[i].delay}ms`,
      });
    }else {
      edges.push({
        id: topology[i].dp_port1,
        from: topology[i].dp_port1.split("-")[0],
        to: topology[i].dp_port2,
        label: `${topology[i].dp_port1}`
      });
    }
  }
}


// create a network
let container = document.getElementById('mynetwork');

// provide the data in the vis format
let data = {
  nodes: nodes,
  edges: edges
};
let options = {
  edges:{
    color: {
      color:'#FE2E2E'
    },
  },
  layout: {
    randomSeed: 1
  }
};

// initialize your network!
var network = new vis.Network(container, data, options);
    let path = "";
    let tmp = "";
    let comparison = [];
    let a = [];
network.on("click", function (params) {
    if (params.edges[0].match(/,/)) {
      comparison = params.edges[0].split(",");
      if (tmp != comparison[0][0]) {
         let temp = comparison[0];
         comparison[0] = comparison[1];
         comparison[1] = temp;
      }
      console.log(comparison)
      tmp = comparison[1][0];
      path += comparison + ",";
    } else {
      tmp = params.edges[0][0]
      console.log(tmp)
      path += params.edges[0] + ",";
    }
});

function OnButtonClick() {
    target = document.getElementById("output");
    target.innerHTML = path.slice(0, -1)
}
</script>
<input type="button" value="Exec" onclick="OnButtonClick();"/><br />
    <br />
    <div id="output"></div>
