<h1>Topology#show</h1>

<!-- 無理矢理リロードするよ -->
<!-- <script>
setInterval("location.reload()",60000);
</script> -->

<!-- スイッチ数をわりだす -->
<% arr = Array.new %>
<% @topologies.each do |topo| %>
  <%= p topo.dp_port1.split("-") %>
  <% arr << topo.dp_port1.split("-")[0] %>
<% end %>

<% arr = arr.uniq %>

<p><%= count = arr.count %></p>

<!-- visjsでネットワークを表示 -->
<style>
    #mynetwork {
        width: 600px;
        height: 400px;
        border: 1px solid lightgray;
    }
</style>
<div id="mynetwork"></div>

<%= javascript_tag do %>
  jscount = '<%= count %>';
  jsarr = '<%= arr.to_json.html_safe %>';
<% end %>

<script>
// power is justice!
jsarr = jsarr.replace(/"|\[|\]/g, "")
jsarr = jsarr.split(',')
console.log(jsarr)

// スイッチの数だけ表示する
function createDataSet(){
  var data = []
  for(i=1; i <= jscount; i++) {
    data[data.length] = {id: i, label: `Node ${jsarr[i-1]}`}
  }
  return data
}

// create an array with nodes
var nodes = new vis.DataSet(createDataSet());

// create an array with edges
var edges = new vis.DataSet([
    {from: 1, to: 3},
    {from: 1, to: 2},
    {from: 2, to: 4},
    {from: 2, to: 5}
]);

// create a network
var container = document.getElementById('mynetwork');

// provide the data in the vis format
var data = {
    nodes: nodes,
    edges: edges
};
var options = {};

// initialize your network!
var network = new vis.Network(container, data, options);
</script>
